// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using NavneVelger.DataContexts;
using System;

namespace NavneVelger.Migrations.NavneVelgerDbMigrations
{
    [DbContext(typeof(NavneVelgerDb))]
    partial class NavneVelgerDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NavneVelger.DataContexts.Navn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Gender");

                    b.Property<string>("Navnet");

                    b.HasKey("Id");

                    b.ToTable("Navnene");
                });

            modelBuilder.Entity("NavneVelger.DataContexts.NavnRangering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("NavnId");

                    b.Property<int>("Rangering");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("NavnId");

                    b.ToTable("NavnRangeringer");
                });

            modelBuilder.Entity("NavneVelger.DataContexts.NavnRangering", b =>
                {
                    b.HasOne("NavneVelger.DataContexts.Navn", "Navn")
                        .WithMany("NavnRangeringer")
                        .HasForeignKey("NavnId");
                });
#pragma warning restore 612, 618
        }
    }
}
